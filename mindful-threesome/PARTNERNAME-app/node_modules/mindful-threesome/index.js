/* (partnerName)-app/node-modules/mindful-threesome/index.js */

var axios = require('axios');
var faceApi = require('face-api');

var fs = require('fs');
var data = fs.readFileSync('./default-rules.json', 'utf8');
var defaultRules = JSON.parse(data);

var rules = defaultRules;

var partner;


var mindfulThreesome = module.exports;

mindfulThreesome.mindfulSetup = function mindfulSetup(options) {
	axios.get(options.partnerAddress + "/api/mindfulRules")
	  .then(function (response) {
	    rules = JSON.parse(response.data.rules);
	  })
	  .catch(function (error) {
	    console.log(error);
	  })

	axios.get(options.partnerAddress + "/api/general")
	  .then(function (response) {
	    partner = JSON.parse(response.data);
	  })
	  .catch(function (error) {
	    console.log(error);
	  })
}

mindfulThreesome.mindfulContact = function() {
	return function (req, res, next) {
		var flags = 0;
		for (var i = 0; i < rules.parts.length; i++) {
			if ((req.body.name == rules.parts[i].name) && 
			(req.body.counterpartName == rules.parts[i].counterpartName) &&
			(req.body.duration > rules.parts[i].duration)
			){
				flags++;
			}
		}

		if (flags >= 3){
			res.send({stopSignal : true});
		}else{
			res.send({stopSignal : false});
		}

		next()
	}

}

mindfulThreesome.mindfulMoan = function () {

	return function (req, res, next) {
		var flags = 0;

		if (req.body.volume > 7.5){
			flags ++;
		}

		if (req.body.duration > 4500){
			flags ++;
		}

		if (req.body.type == "dialogue"){
			var botheringWords = req.body.contents.find(rules.botheringWords);
			flags += botheringWords.length;
		}

		if (flags >= 4){
			res.send({stopSignal : true});
		}else{
			res.send({stopSignal : false});
		}

		next()
	}
	
}

mindfulThreesome.mindfulEyeGaze = function () {
	return function (req, res, next) {
		if (partner !== undefined){
			var mainObjImg = req.body.mainObject;
			var nameOfRecognizedFace = faceApi.fullFaceDescriptions.findBestMatch(mainObjImg).toString
			if (nameOfRecognizedFace != partner.name) && (req.body.mainObject.type == "HUMAN"){
				if (req.body.duration > 12000){
					res.send({stopSignal : true});
				}else{
					res.send({stopSignal : false});
				}
			}
		}

	next()
	}

}
